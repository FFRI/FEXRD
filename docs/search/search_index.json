{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to FEXRD documentation Feature EXtractor for FFRI Dataset (FEXRD) is a library to make feature vectors from FFRI Dataset. This document explains the motivation, basic usage and advanced usage of FEXRD. Motivation Basic Usage Advanced Usage (WIP)","title":"Introduction"},{"location":"#welcome-to-fexrd-documentation","text":"Feature EXtractor for FFRI Dataset (FEXRD) is a library to make feature vectors from FFRI Dataset. This document explains the motivation, basic usage and advanced usage of FEXRD. Motivation Basic Usage Advanced Usage (WIP)","title":"Welcome to FEXRD documentation"},{"location":"advanced_usage/","text":"Advanced Usage Extension of Feature Extractor Class (WIP)","title":"Advanced Usage"},{"location":"advanced_usage/#advanced-usage","text":"","title":"Advanced Usage"},{"location":"advanced_usage/#extension-of-feature-extractor-class","text":"(WIP)","title":"Extension of Feature Extractor Class"},{"location":"basic_usage/","text":"Basic Usage Feature Extractor Class FEXRD provides feature extraction classes to convert the elements in the FFRI Dataset into numpy.ndarray vectors (hereinafter referred to simply as vectors). These classes are prepared for the values corresponding to the following keys in the FFRI Dataset. lief dos_header rich_header header optional_header data_directories sections relocations tls export debug (work in progress) imports resources_tree (work in progress) resources_manager signature load_configuration peid trid strings The feature extraction classes corresponding to each of the above keys are as follows. LiefFeatureExtractor: lief DosHeaderFeatureExtractor: dos_header RichHeaderFeatureExtractor: rich_header HeaderFeatureExtractor: header OptionalHeaderFeatureExtractor: optional_header DataDirectoriesFeatureExtractor: data_directories SectionsFeatureExtractor: sections RelocationsFeatureExtractor: relocations TlsFeatureExtractor: tls ExportFeatureExtractor: export DebugFeatureExtractor: debug ImportsFeatureExtractor: imports ResourcesTreeFeatureExtractor: resources_tree ResourcesManagerFeatureExtractor: resources_manager SignatureFeatureExtractor: signature LoadConfigurationFeatureExtractor: load_configuration PeidFeatureExtractor: peid TridFeatureExtractor: trid StringsFeatureExtractor: strings In addition to the above feature extraction classes, we also provide AllFeaturesExtractor. This can be used to create a vector that combines all the above feature extraction classes' outputs. Usage Example Let's see how to use it in practice. In FEXRD, depending on the feature you want to use, you can instantiate the corresponding feature extraction class and call the get_features method to retrieve the output vector. An example of creating a vector of the \"strings\" element is as follows. import json from fexrd import StringsFeatureExtractor sfe = StringsFeatureExtractor() # instantiae feature extractor class for the \"string\" element fin = open(\"ffridataset_sample.jsonl\", \"r\") for l in fin.readlines(): obj = json.loads(l) column_names, vector = sfe.get_features(obj[\"strings\"]) # convert to the vector In the above example, StringsFeatureExtractor is instantiated, and the \"string\" element is passed as an argument to the get_features method to get the vector. The return value of the get_features method is a tuple, where the 0th element is the column name of the vector and the 1st element is the vector. The same is true for converting the element corresponding to the key other than \"strings\" into a vector. More Practical Usage Examples The example directory contains more practical usage examples.","title":"Basic Usage"},{"location":"basic_usage/#basic-usage","text":"","title":"Basic Usage"},{"location":"basic_usage/#feature-extractor-class","text":"FEXRD provides feature extraction classes to convert the elements in the FFRI Dataset into numpy.ndarray vectors (hereinafter referred to simply as vectors). These classes are prepared for the values corresponding to the following keys in the FFRI Dataset. lief dos_header rich_header header optional_header data_directories sections relocations tls export debug (work in progress) imports resources_tree (work in progress) resources_manager signature load_configuration peid trid strings The feature extraction classes corresponding to each of the above keys are as follows. LiefFeatureExtractor: lief DosHeaderFeatureExtractor: dos_header RichHeaderFeatureExtractor: rich_header HeaderFeatureExtractor: header OptionalHeaderFeatureExtractor: optional_header DataDirectoriesFeatureExtractor: data_directories SectionsFeatureExtractor: sections RelocationsFeatureExtractor: relocations TlsFeatureExtractor: tls ExportFeatureExtractor: export DebugFeatureExtractor: debug ImportsFeatureExtractor: imports ResourcesTreeFeatureExtractor: resources_tree ResourcesManagerFeatureExtractor: resources_manager SignatureFeatureExtractor: signature LoadConfigurationFeatureExtractor: load_configuration PeidFeatureExtractor: peid TridFeatureExtractor: trid StringsFeatureExtractor: strings In addition to the above feature extraction classes, we also provide AllFeaturesExtractor. This can be used to create a vector that combines all the above feature extraction classes' outputs.","title":"Feature Extractor Class"},{"location":"basic_usage/#usage-example","text":"Let's see how to use it in practice. In FEXRD, depending on the feature you want to use, you can instantiate the corresponding feature extraction class and call the get_features method to retrieve the output vector. An example of creating a vector of the \"strings\" element is as follows. import json from fexrd import StringsFeatureExtractor sfe = StringsFeatureExtractor() # instantiae feature extractor class for the \"string\" element fin = open(\"ffridataset_sample.jsonl\", \"r\") for l in fin.readlines(): obj = json.loads(l) column_names, vector = sfe.get_features(obj[\"strings\"]) # convert to the vector In the above example, StringsFeatureExtractor is instantiated, and the \"string\" element is passed as an argument to the get_features method to get the vector. The return value of the get_features method is a tuple, where the 0th element is the column name of the vector and the 1st element is the vector. The same is true for converting the element corresponding to the key other than \"strings\" into a vector.","title":"Usage Example"},{"location":"basic_usage/#more-practical-usage-examples","text":"The example directory contains more practical usage examples.","title":"More Practical Usage Examples"},{"location":"motivation/","text":"Why FEXRD? FFRI Dataset is a dataset that can be used for a wide variety of research by containing each tool's raw output (e.g., lief, TrID, and peHash). An example in the FFRI Dataset 2020 is shown below. It is formatted as JSON, and its keys correspond to the names of the tools, and its values correspond to the tool's raw outputs. { \"label\": 0, \"date\": null, \"version\": \"2020\", \"file_size\": 12288, \"hashes\": { \"md5\": \"c5560c9b347ac6355dd7020b9a841ffc\", \"sha1\": \"437f5ccdf1fefc4f42442ddc22f46e4c34f1ae9f\", \"sha256\": \"e215fbbdf2a9fec8161808a41d371228882202d63924a99d0efbdae54c4d8f23\", \"ssdeep\": \"192:k8xZxfjo/vNxzp/yChtHmNn9sAzdN+j7RIY+Oifwhy681sy3Q5tfqXU/YEm:fxro/HzpyagNntajN/+p31TEm\", \"imphash\": \"7d3ef9faa2be833b9d39423cd3ed8b07\", \"impfuzzy\": \"48:8/Tbnw/LnNV06EAjIj1fB+xBMLSQMftMS1o:8nnw/LNVxEAkjZsXvtMS1o\", \"tlsh\": \"C4422B47BF564CFBC66943748463074AE1B17E418733A3CF13A9912D1FA6781312AA9C\", \"totalhash\": null, \"anymaster\": \"69631d85bdfc28870624870bb6dfd9c3defe4612\", \"anymaster_v1_0_1\": \"c1b9817d0a3e3eec7b1c53ba03460e4abc3d8f8c\", \"endgame\": \"d97267dd40d12b532b38daa246886bf0\", \"crits\": \"ce4c40d39ef962b9681c2ffe3984ad7ef7311bcd\", \"pehashng\": \"05c0ba3fd00cbd6615ebd83c5d57b85840f12673934b761fafb9893f786a6419\" }, \"lief\": { \"data_directories\": [ { \"RVA\": 0, \"size\": 0, \"type\": \"EXPORT_TABLE\" }, { \"RVA\": 10580, \"section\": \".rdata\", } ... } ... } For machine learning research, we need to convert the data into fixed-dimensional vectors. Since the JSON data is heavily nested, you might be annoyed by too high-dimensional vectors if you just flatten the data. FEXRD makes it easy for you to obtain fixed-dimensional vectors suitable for machine learning research from the FFRI Dataset.","title":"Motivation"},{"location":"motivation/#why-fexrd","text":"FFRI Dataset is a dataset that can be used for a wide variety of research by containing each tool's raw output (e.g., lief, TrID, and peHash). An example in the FFRI Dataset 2020 is shown below. It is formatted as JSON, and its keys correspond to the names of the tools, and its values correspond to the tool's raw outputs. { \"label\": 0, \"date\": null, \"version\": \"2020\", \"file_size\": 12288, \"hashes\": { \"md5\": \"c5560c9b347ac6355dd7020b9a841ffc\", \"sha1\": \"437f5ccdf1fefc4f42442ddc22f46e4c34f1ae9f\", \"sha256\": \"e215fbbdf2a9fec8161808a41d371228882202d63924a99d0efbdae54c4d8f23\", \"ssdeep\": \"192:k8xZxfjo/vNxzp/yChtHmNn9sAzdN+j7RIY+Oifwhy681sy3Q5tfqXU/YEm:fxro/HzpyagNntajN/+p31TEm\", \"imphash\": \"7d3ef9faa2be833b9d39423cd3ed8b07\", \"impfuzzy\": \"48:8/Tbnw/LnNV06EAjIj1fB+xBMLSQMftMS1o:8nnw/LNVxEAkjZsXvtMS1o\", \"tlsh\": \"C4422B47BF564CFBC66943748463074AE1B17E418733A3CF13A9912D1FA6781312AA9C\", \"totalhash\": null, \"anymaster\": \"69631d85bdfc28870624870bb6dfd9c3defe4612\", \"anymaster_v1_0_1\": \"c1b9817d0a3e3eec7b1c53ba03460e4abc3d8f8c\", \"endgame\": \"d97267dd40d12b532b38daa246886bf0\", \"crits\": \"ce4c40d39ef962b9681c2ffe3984ad7ef7311bcd\", \"pehashng\": \"05c0ba3fd00cbd6615ebd83c5d57b85840f12673934b761fafb9893f786a6419\" }, \"lief\": { \"data_directories\": [ { \"RVA\": 0, \"size\": 0, \"type\": \"EXPORT_TABLE\" }, { \"RVA\": 10580, \"section\": \".rdata\", } ... } ... } For machine learning research, we need to convert the data into fixed-dimensional vectors. Since the JSON data is heavily nested, you might be annoyed by too high-dimensional vectors if you just flatten the data. FEXRD makes it easy for you to obtain fixed-dimensional vectors suitable for machine learning research from the FFRI Dataset.","title":"Why FEXRD?"}]}
